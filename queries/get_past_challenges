SELECT
SKIP @first_row_index@
FIRST @page_size@
  CASE WHEN (p.project_studio_spec_id IS NOT NULL) THEN 1 ELSE 0 END AS is_studio
, pcl.description AS challenge_type
, pn.value AS challenge_name
, p.project_id AS challenge_id
, screening.parameter AS screening_scorecard_id
, review.parameter AS review_scorecard_id
, (SELECT value FROM project_info WHERE project_id = p.project_id AND project_info_type_id = 4) AS forum_id
, (SELECT COUNT(*) FROM submission s1 INNER JOIN upload u1 ON s1.upload_id = u1.upload_id
        WHERE u1.project_id = p.project_id
        AND s1.submission_type_id = 1
        AND s1.submission_status_id <> 5) AS num_submissions
, (SELECT COUNT(*) FROM resource r WHERE r.project_id = p.project_id AND r.resource_role_id = 1) AS num_registrants
, NVL((SELECT SUM(pr.number_of_submissions) FROM prize pr WHERE pr.project_id = p.project_id AND pr.prize_type_id = 14), 0) AS number_of_checkpoints_prizes
, (SELECT pr.prize_amount FROM prize pr WHERE pr.project_id = p.project_id AND pr.prize_type_id = 15 AND pr.place = 1) AS first_place_prize
, (SELECT SUM(prize_amount) FROM prize pr WHERE pr.project_id = p.project_id AND pr.prize_type_id = 15) AS total_prize
, (SELECT SUM(prize_amount * number_of_submissions) FROM prize pr WHERE pr.project_id = p.project_id AND pr.prize_type_id = 14) AS checkpoint_total_prizes
, NVL(pp1.actual_start_time, pp1.scheduled_start_time) AS registration_start_date
, NVL(pp1.actual_end_time, pp1.scheduled_end_time) AS registration_end_date
, NVL(pp15.actual_end_time, pp15.scheduled_end_time) AS checkpoint_submission_end_date
, NVL(pp2.actual_end_time, pp2.scheduled_end_time) AS submission_end_date
, pstatus.name AS status
, CASE WHEN pidr.value = 'On' THEN
  NVL((SELECT value::decimal FROM project_info pi_dr WHERE pi_dr.project_info_type_id = 30 AND pi_dr.project_id = p.project_id), (SELECT round(NVL(pi16.value::decimal, 0)) FROM project_info pi16 WHERE pi16.project_info_type_id = 16 AND pi16.project_id = p.project_id))
  ELSE NULL END AS digital_run_points
, nvl((SELECT MAX(event_id) FROM contest_project_xref x, contest c WHERE project_id = p.project_id AND c.contest_id = x.contest_id), 0) AS event_id
, (SELECT event_short_desc FROM event e WHERE e.event_id = nvl((SELECT MAX(event_id) FROM contest_project_xref x, contest c WHERE project_id = p.project_id AND c.contest_id = x.contest_id), 0)) AS event_name
, technology_list(pi1.value) AS technologies
, platform_list(p.project_id) AS platforms
, CASE WHEN (pp1.phase_status_id = 2) THEN 'Yes' ELSE 'No' END AS registration_open
, NVL((SELECT CAST('t' AS boolean) FROM contest_eligibility WHERE contest_id = p.project_id), CAST('f' AS boolean)) AS is_private
, (SELECT value FROM project_info pi53 WHERE project_id = p.project_id AND project_info_type_id = 53) AS submissions_viewable
FROM project p
INNER JOIN project_status_lu pstatus ON pstatus.project_status_id = p.project_status_id 
INNER JOIN project_category_lu pcl ON pcl.project_category_id = p.project_category_id 
INNER JOIN project_phase pp1 ON pp1.project_id = p.project_id AND pp1.phase_type_id = 1 
INNER JOIN project_phase pp2 ON pp2.project_id = p.project_id AND pp2.phase_type_id = 2 
INNER JOIN project_info pn ON pn.project_id = p.project_id AND pn.project_info_type_id = 6 
INNER JOIN project_info pi1 ON pi1.project_id = p.project_id AND pi1.project_info_type_id = 1
LEFT JOIN project_phase pp15 ON pp15.project_id = p.project_id AND pp15.phase_type_id = 15
LEFT JOIN (
  SELECT
    pp3.project_id
  , pc3.parameter
  FROM project_phase pp3
  LEFT JOIN phase_criteria pc3 ON pp3.project_phase_id = pc3.project_phase_id
  WHERE pp3.phase_type_id = 3
  AND pc3.phase_criteria_type_id = 1
) screening ON screening.project_id = p.project_id
LEFT JOIN (
  SELECT
    pp4.project_id
  , pc4.parameter
  FROM project_phase pp4
  LEFT JOIN phase_criteria pc4 ON pp4.project_phase_id = pc4.project_phase_id
  WHERE pp4.phase_type_id = 4
  AND pc4.phase_criteria_type_id = 1
) review ON review.project_id = p.project_id
LEFT JOIN project_info pidr ON pidr.project_id = p.project_id AND pidr.project_info_type_id = 26
WHERE
p.project_status_id IN (4, 5, 6, 7, 8, 9, 10, 11)
AND pcl.project_category_id NOT IN (27, 37) AND pcl.project_type_id IN (@track@)
and NVL(pp2.actual_end_time, pp2.scheduled_end_time) > '2012-01-01 00:00:00'
AND NVL(pp2.actual_end_time, pp2.scheduled_end_time) BETWEEN TO_DATE('@submission_end_from@ 00:00:00', '%Y-%m-%d %H:%M:%S') AND TO_DATE('@submission_end_to@ 23:59:59', '%Y-%m-%d %H:%M:%S')
-- Filter out the challenge that user is not belong to.
AND pp1.phase_status_id in (2,3)
AND LOWER(pn.value) LIKE('@challenge_name@')
-- start of parameters
AND NVL((SELECT pr.prize_amount FROM prize pr WHERE pr.project_id = p.project_id AND pr.prize_type_id = 15 AND pr.place = 1), 0) >= @prize_lower_bound@
AND NVL((SELECT pr.prize_amount FROM prize pr WHERE pr.project_id = p.project_id AND pr.prize_type_id = 15 AND pr.place = 1), 0) <= @prize_upper_bound@
AND p.tc_direct_project_id = DECODE(@project_id@, 0, p.tc_direct_project_id, @project_id@)
ORDER BY @sort_column@ @sort_order@
