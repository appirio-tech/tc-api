SELECT DISTINCT(c.coder_id)
     , c.handle
     , sub_info.category_name AS category_name
     , sub_info.phase_id - 111 AS category_id
     , NVL(ur.rating, 0.0) AS rating
     , NVL(rank.percentile, 0) AS percentile
     , NVL(rank.rank, 0) AS rank
     , NVL(cur.rank, 0) AS country_rank
     , NVL(sur.rank, 0) AS school_rank
     , NVL(ur.vol, 0) AS vol
     , sub_info.count AS num_ratings -- used for both inquiries and competitions info field
     , (SELECT NVL(max(new_rating), 0)
          FROM tcs_dw:project_result mx
             , tcs_dw:project mx1
         WHERE mx1.project_id = mx.project_id
           AND mx1.phase_id = ur.phase_id
           AND user_id = ur.user_id
           AND new_rating > 0) AS max_rating
     , (SELECT NVL(min(new_rating), 0)
          FROM tcs_dw:project_result mx
             , tcs_dw:project mx1
         WHERE mx1.project_id = mx.project_id
           AND mx1.phase_id = ur.phase_id
           AND user_id = ur.user_id
           AND new_rating > 0) AS min_rating
     , sub_info.submissions
     , sub_info.submission_rate
     , sub_info.passed_screening
     , sub_info.screening_success_rate
     , sub_info.passed_review
     , sub_info.review_success_rate
     , sub_info.appeals
     , sub_info.appeal_success_rate
     , sub_info.max_score
     , sub_info.min_score
     , sub_info.avg_score
     , sub_info.avg_placement
     , sub_info.wins
     , sub_info.win_percent
  FROM tcs_dw:user_rating ur
      LEFT OUTER JOIN tcs_dw:user_rank rank ON rank.phase_id = ur.phase_id AND rank.user_id = ur.user_id AND rank.user_rank_type_id = 2
      LEFT OUTER JOIN  tcs_dw:country_user_rank cur ON cur.phase_id = ur.phase_id AND cur.user_id = ur.user_id AND cur.user_rank_type_id = 2
      LEFT OUTER JOIN  tcs_dw:school_user_rank sur ON sur.phase_id = ur.phase_id AND sur.user_id = ur.user_id AND sur.user_rank_type_id = 2
      JOIN (
        SELECT 
               p.phase_id AS phase_id
             , p.phase_desc AS category_name
             , COUNT(*) AS count
             , NVL(SUM(submit_ind), 0) AS submissions
             , CASE WHEN COUNT(*) = 0 THEN 0::DECIMAL ELSE SUM(submit_ind) / COUNT(*) END AS submission_rate
             , NVL(SUM(CASE WHEN valid_submission_ind = 1 AND submit_ind = 1 THEN 1 ELSE 0 END), 0) AS passed_screening
             , NVL(CASE WHEN SUM(submit_ind) = 0 THEN 0 ELSE SUM(CASE WHEN valid_submission_ind = 1 AND submit_ind = 1 THEN 1 ELSE 0 END) / SUM(submit_ind) END,0) AS screening_success_rate
             , NVL(SUM(passed_review_ind), 0) AS passed_review
             , NVL(CASE WHEN SUM(submit_ind) = 0 THEN 0 ELSE SUM(passed_review_ind) / SUM(submit_ind) END, 0) AS review_success_rate
             , NVL(SUM(CASE WHEN num_successful_appeals is NULL THEN 0 ELSE num_appeals END), 0) AS appeals
             , NVL(CASE WHEN SUM(CASE WHEN num_successful_appeals is NULL THEN 0 ELSE num_appeals END) = 0 THEN 0 ELSE
                   SUM(num_successful_appeals) / SUM(CASE WHEN num_successful_appeals is NULL THEN 0 ELSE num_appeals END) END, 0) AS appeal_success_rate
             , NVL(max(pr.final_score), 0) AS max_score
             , NVL(min(pr.final_score), 0) AS min_score
             , NVL(CASE WHEN SUM(CASE WHEN pr.final_score > 0 THEN 1 ELSE 0 END) = 0 THEN 0 ELSE SUM(CASE WHEN pr.final_score > 0 THEN pr.final_score ELSE 0 END) / SUM(CASE WHEN pr.final_score > 0 THEN 1 ELSE 0 END) END, 0) AS avg_score
             , NVL(CASE WHEN SUM(CASE WHEN placed > 0 THEN 1 ELSE 0 END) = 0 THEN 0 ELSE SUM(CASE WHEN placed > 0 THEN placed ELSE 0 END) / SUM(CASE WHEN placed > 0 THEN 1 ELSE 0 END) END, 0) AS avg_placement
             , NVL(SUM(CASE WHEN placed = 1 AND passed_review_ind = 1 THEN 1 ELSE 0 END), 0) AS wins
             , NVL(CASE WHEN SUM(submit_ind) = 0 THEN 0 ELSE SUM(CASE WHEN placed = 1 AND passed_review_ind = 1 THEN 1 ELSE 0 END) / SUM(submit_ind) END, 0) AS win_percent
        FROM tcs_dw:project_result pr, tcs_dw:project p, coder cc
        WHERE pr.user_id = cc.coder_id
        AND p.project_id = pr.project_id
        AND p.status_id in (4,5,7,8)
        AND LOWER(cc.handle) = LOWER('@handle@')
        GROUP BY p.phase_id, p.phase_desc
      ) sub_info ON sub_info.phase_id = ur.phase_id
     , coder AS c
 WHERE ur.user_id = c.coder_id
   AND ur.phase_id IN (112, 113, 117, 118, 120, 124, 125, 130, 134, 135, 136, 137, 140, 146, 147, 148, 149, 150)
   AND LOWER(c.handle)= LOWER('@handle@')

