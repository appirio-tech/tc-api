SELECT
SKIP @firstRowIndex@
FIRST @pageSize@
   CASE WHEN (pcl.project_type_id = 3) THEN 1 ELSE 0 END AS is_studio
, p.project_id AS challenge_id
, pcl.description AS challenge_type
, challenge_name.value as challenge_name
, p.tc_direct_project_id AS project_id
, (select max(pc3.parameter) FROM project_phase pp3, phase_criteria pc3 where p.project_id = pp3.project_id and pp3.project_phase_id = pc3.project_phase_id and  pp3.phase_type_id = 3
			AND pc3.phase_criteria_type_id = 1) AS screening_scorecard_id
, (select max(pc4.parameter) FROM project_phase pp4, phase_criteria pc4 where p.project_id = pp4.project_id and pp4.project_phase_id = pc4.project_phase_id and  pp4.phase_type_id = 4
			AND pc4.phase_criteria_type_id = 1) AS review_scorecard_id 
, cmc_task_id.value as cmc_task_id
, (select value from project_info forum where forum.project_id = p.project_id and forum.project_info_type_id = 4) as forum_id
, (SELECT COUNT(*) FROM submission s1 INNER JOIN upload u1 ON s1.upload_id = u1.upload_id
    WHERE u1.project_id = p.project_id
    AND s1.submission_type_id IN (1, 3)
    AND s1.submission_status_id <> 5) AS num_submissions
, (SELECT COUNT(*) FROM resource r WHERE r.project_id = p.project_id AND r.resource_role_id = 1) AS num_registrants
, NVL((SELECT SUM(pr.number_of_submissions) FROM prize pr WHERE pr.project_id = p.project_id AND pr.prize_type_id = 14), 0) AS number_of_checkpoints_prizes
, NVL((SELECT SUM(pr.prize_amount) FROM prize pr WHERE pr.project_id = p.project_id AND pr.prize_type_id = 14 and pr.place = 1), 0) AS top_checkpoint_prize
, pr.prize_amount as prize1
, 0 as prize2
, 0 as prize3
, 0 as prize4
, 0 as prize5
, 0 as prize6
, 0 as prize7
, 0 as prize8
, NVL(pp1.actual_start_time, pp1.scheduled_start_time) AS posting_date
,  NVL(pp1.actual_end_time, pp1.scheduled_end_time)  AS registration_end_date
, (select NVL(checkpoint.actual_end_time , checkpoint.scheduled_end_time) from project_phase checkpoint 
          where checkpoint.project_id = p.project_id and checkpoint.phase_type_id =15) AS checkpoint_submission_end_date
, NVL(pp.actual_end_time, pp.scheduled_end_time) AS submission_end_date
, (select NVL(appeal.actual_end_time , appeal.scheduled_end_time) from project_phase appeal 
          where appeal.project_id = p.project_id and appeal.phase_type_id =6) AS appeals_end_date
, (select max(NVL(ff.actual_end_time , ff.scheduled_end_time)) from project_phase ff 
          where ff.project_id = p.project_id and ff.phase_type_id =9) AS final_fix_end_date
, '' AS current_phase_end_date
, 0 AS current_phase_remaining_time
, '' AS current_status
, '' current_phase_name
, (select nvl(pi30.value, 0) from project_info pi30, project_info pi26 where pi30.project_id = p.project_id and pi26.project_id = p.project_id
       and pi30.project_info_type_id = 30 and pi26.project_info_type_id = 26 and pi26.value = 'On') AS digital_run_points
, NVL((SELECT max(event_id) FROM contest_project_xref x, contest c WHERE project_id = p.project_id AND c.contest_id = x.contest_id), 0) AS event_id
, (SELECT event_short_desc FROM event e WHERE e.event_id = nvl((SELECT max(event_id) FROM contest_project_xref x, contest c WHERE project_id = p.project_id AND c.contest_id = x.contest_id), 0)) AS event_name
, technology_list(p.project_id) AS technology
, platform_list(p.project_id) AS platforms
FROM project p
inner JOIN prize pr ON pr.project_id = p.project_id and pr.place =1 and pr.prize_type_id = 15
inner JOIN project_phase pp ON pp.project_id = p.project_id and pp.phase_type_id = 2
left outer JOIN project_info cmc_task_id on cmc_task_id.project_id = p.project_id and cmc_task_id.project_info_type_id = 70
inner join project_info  challenge_name on challenge_name.project_id = p.project_id and challenge_name.project_info_type_id = 6

INNER JOIN project_phase pp1 ON pp1.project_id = p.project_id AND pp1.phase_type_id = 1
INNER JOIN project_status_lu pstatus ON p.project_status_id = pstatus.project_status_id
INNER JOIN project_category_lu pcl on pcl.project_category_id = p.project_category_id
WHERE p.project_category_id = pcl.project_category_id

AND pcl.project_category_id NOT IN (27, 37) --exclude when spec review was a 'contest.' Also exclude MM, which is in there as a 'software' contest.
AND p.project_status_id IN (4, 5, 6, 7, 8, 9, 10, 11)
AND pcl.project_type_id IN (@project_type_id@)
AND NVL(pp.actual_end_time, pp.scheduled_end_time) BETWEEN TO_DATE('@submissionEndFrom@ 00:00:00', '%Y-%m-%d %H:%M:%S') AND TO_DATE('@submissionEndTo@ 23:59:59', '%Y-%m-%d %H:%M:%S')
AND LOWER(pcl.description) = DECODE('@categoryName@', '', LOWER(pcl.description), '@categoryName@')
AND LOWER(challenge_name.value) LIKE ('@challengeName@')
AND NVL(pr.prize_amount, 0) >= @prilower@
AND NVL(pr.prize_amount, 0) <= @priupper@
AND p.tc_direct_project_id = DECODE(@tcdirectid@, 0, p.tc_direct_project_id, @tcdirectid@)
AND NVL(LOWER(cmc_task_id.value), '') = DECODE('@cmc@', '', NVL(LOWER(cmc_task_id.value), ''), '@cmc@')
-- Filter out the challenge that user is not belong to.
AND (not exists (SELECT contest_id FROM contest_eligibility WHERE contest_id = p.project_id)
  OR exists(SELECT contest_id FROM contest_eligibility ce, group_contest_eligibility gce, user_group_xref x
                WHERE x.login_id = @userId@ AND x.group_id = gce.group_id AND gce.contest_eligibility_id = ce.contest_eligibility_id
                AND ce.contest_id = p.project_id))
and pp.actual_end_time > '2012-01-01 00:00:00'

--ORDER BY p.project_id  desc, @sortColumn@ @sortOrder@
