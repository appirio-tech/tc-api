FORMAT: 1A
HOST: http://api.topcoder.com/v2

# TopCoder API
Programmatically access TopCoder contests and members.

# Group Platform
Platform APIs

## Activity Summary [/platform/activitySummary]
### Get Activity Summary [GET]

+ Response 200 (application/json)

        {
            "activeContestsCount": 50,
            "activeMembersCount": 500000,
            "activeProjectsCount": 30,
            "completedProjectsCount": 500,
            "prizePurse": "$100000"
        }

# Group Registration
Register a new user.

## Users [/users]
+ Model (application/json)

        {
            "firstname" : "John",
            "lastname" : "Doe",
            "handle" : "uniqueLogin",
            "country" : "UK",
            "email" : "name@domain.com",
            "password" : "HashedPassword",
            "socialProvider" : "google",
            "socialUserName" : "JohnsGoogleName",
            "socialEmail" : "john@gmail.com",
            "socialEmailVerified" : "true"
        }

### Create a new user [POST]
+ Request (application/json)

    [Users][]

+ Response 200 (application/json)

        {
            "name":"OK",
            "value":"200",
            "description":"This message will contain the new user id."
        }
        
+ Response 400 (application/json)

        {
            "name":"Bad Request",
            "value":"400",
            "description":"This message will explain why the request is invalid or cannot be served."
        }
        
+ Response 404 (application/json)

        {
            "name":"Not Found",
            "value":"404",
            "description":"This message will explain why the URI requested is invalid or the resource does not exist."
        }
        
+ Response 422 (application/json)

        {
            "name":"Unprocessable Entity",
            "value":"422",
            "description":"This message will explain why the POST data was not accepted."
        }
        
+ Response 500 (application/json)

        {
            "name":"Internal Server Error",
            "value":"500",
            "description":"Unknown server error. Please contact support."
        }

+ Response 503 (application/json)

        {
            "name":"Service Unavailable",
            "value":"503",
            "description":"Servers are up but overloaded. Try again later."
        }


#Group Software Contests
        
## Review Opportunities [/develop/reviewOpportunities/?pageIndex={pageIndex}&pageSize={pageSize}&sortColumn={sortColumn}&sortOrder={sortOrder}]
### Get Review Oppertunities [GET]

+ Parameters
    + filter (optional, string, `type`) ... You can set multi key=value pair parameters to set the filter parameters. The filter parameter can only be following key: type, contestName, catalog, registrationStartDate.type, registrationStartDate.firstDate, registrationStartDate.secondDate, submissionEndDate.type, submissionEndDate.firstDate, submissionEndDate.secondDate, reviewEndDate.type, reviewEndDate.firstDate, reviewEndDate.secondDate, reviewPaymentLowerBound, reviewPaymentUpperBound. For the registrationStartDate, submissionEndDate and reviewEndDate's type, it can only be(case sensitive) BEFORE, AFTER, ON, BETWEEN_DATES, BEFORE_CURRENT_DATE. When the type is BETWEEN_DATES, the secondDate should be provided. The date value should follow this pattern MM.dd.yyyy.
    + value (optional, string, `Development`) ... Value of the filter key-value pair
    + pageIndex (optional, number, `1`) ... The page index of the returned resources. 1-based. It can be null. The default value will be 1
    + pageSize (optional, number, `50`) ... The page size of the returned resources. 1-based. It can be null. The default value will be 10.
    + sortColumn (optional, string, `contestName`) ... The column name to sort, can be null.
    + sortOrder (optional, string, `asc`) ... The sorting order, can be null. If it's set, it can only be 'asc' or 'desc'.


+ Response 200 (application/json)

        {
            "total": 21,
            "pageIndex": 1,
            "pageSize": 10,
            "data": [
                {
                    "primaryReviewerPayment": 0,
                    "secondaryReviewerPayment": 0,
                    "numberOfSubmissions": 1,
                    "opensOn": "10.25.2013 21:09 EDT",
                    "reviewStart": "10.29.2013 21:13 EDT",
                    "reviewEnd": "10.31.2013 21:13 EDT",
                    "numberOfReviewPositionsAvailable": 1,
                    "type": "Copilot Posting",
                    "reviewType": "Contest Review",
                    "contestName": "DOE Open-WARP Software Copilot Opportunity"
                },
                {
                    "primaryReviewerPayment": 442,
                    "secondaryReviewerPayment": 336,
                    "numberOfSubmissions": 3,
                    "opensOn": "10.31.2013 22:22 EDT",
                    "reviewStart": "11.07.2013 01:52 EST",
                    "reviewEnd": "11.09.2013 01:52 EST",
                    "numberOfReviewPositionsAvailable": 1,
                    "type": "Assembly Competition",
                    "reviewType": "Contest Review",
                    "contestName": "Module Assembly - Topcoder NodeJS Contest Retrieval API"
                },
                {
                    "primaryReviewerPayment": 205,
                    "secondaryReviewerPayment": 143,
                    "numberOfSubmissions": 1,
                    "opensOn": "11.01.2013 23:25 EDT",
                    "reviewStart": "11.08.2013 10:30 EST",
                    "reviewEnd": "11.10.2013 10:30 EST",
                    "numberOfReviewPositionsAvailable": 2,
                    "type": "UI Prototype Competition",
                    "reviewType": "Contest Review",
                    "contestName": "NEW TC-CS Community TopCoder API Hooking Up part 2- Wordpress Plugin Development"
                },
                {
                    "primaryReviewerPayment": 430,
                    "secondaryReviewerPayment": 330,
                    "submissionsNumber": 4,
                    "opensOn": "11.02.2013 07:00 EDT",
                    "reviewStart": "11.07.2013 18:05 EST",
                    "reviewEnd": "11.09.2013 18:05 EST",
                    "numberOfReviewPositionsAvailable": 1,
                    "type": "Assembly Competition",
                    "reviewType": "Contest Review",
                    "contestName": "Module Assembly - TopCoder NodeJS Software Tops REST API"
                },
                {
                    "primaryReviewerPayment": 0,
                    "secondaryReviewerPayment": 0,
                    "numberOfSubmissions": 2,
                    "opensOn": "11.03.2013 20:33 EST",
                    "reviewStart": "11.05.2013 20:38 EST",
                    "reviewEnd": "11.07.2013 20:38 EST",
                    "numberOfReviewPositionsAvailable": 1,
                    "type": "Bug Hunt",
                    "reviewType": "Contest Review",
                    "contestName": "Hercules Player Personal Content DVR Bug Hunt"
                },
                {
                    "primaryReviewerPayment": 490,
                    "secondaryReviewerPayment": 360,
                    "numberOfSubmissions": 0,
                    "opensOn": "11.03.2013 23:20 EST",
                    "reviewStart": "11.10.2013 11:25 EST",
                    "reviewEnd": "11.12.2013 11:25 EST",
                    "numberOfReviewPositionsAvailable": 2,
                    "type": "Assembly Competition",
                    "reviewType": "Contest Review",
                    "contestName": "Hercules Tech App SAHIC Prototype Conversion Module Assembly"
                },
                {
                    "primaryReviewerPayment": 0,
                    "secondaryReviewerPayment": 0,
                    "numberOfSubmissions": 3,
                    "opensOn": "11.04.2013 03:00 EST",
                    "reviewStart": "11.07.2013 03:05 EST",
                    "reviewEnd": "11.09.2013 03:05 EST",
                    "numberOfReviewPositionsAvailable": 1,
                    "type": "Bug Hunt",
                    "reviewType": "Contest Review",
                    "contestName": "Styx Physical Access Control iPad Application iOS7 Bug Hunt 2"
                },
                {
                    "primaryReviewerPayment": 0,
                    "secondaryReviewerPayment": 0,
                    "numberOfSubmissions": 3,
                    "opensOn": "11.04.2013 03:00 EST",
                    "reviewStart": "11.07.2013 03:05 EST",
                    "reviewEnd": "11.09.2013 03:05 EST",
                    "numberOfReviewPositionsAvailable": 1,
                    "type": "Bug Hunt",
                    "reviewType": "Contest Review",
                    "contestName": "Styx Physical Access Control iPhone Application iOS7 Bug Hunt 2"
                },
                {
                    "primaryReviewerPayment": 202,
                    "secondaryReviewerPayment": 144,
                    "numberOfSubmissions": 0,
                    "opensOn": "11.04.2013 09:15 EST",
                    "reviewStart": "11.09.2013 21:20 EST",
                    "reviewEnd": "11.11.2013 21:20 EST",
                    "numberOfReviewPositionsAvailable": 3,
                    "type": "Assembly Competition",
                    "reviewType": "Contest Review",
                    "contestName": "Module Assembly - ActionHero Tasks for Adding LDAP Entry and Sending Verification Emails"
                },
                {
                    "primaryReviewerPayment": 298,
                    "secondaryReviewerPayment": 216,
                    "numberOfSubmissions": 0,
                    "opensOn": "11.04.2013 09:29 EST",
                    "reviewStart": "11.09.2013 21:34 EST",
                    "reviewEnd": "11.11.2013 21:34 EST",
                    "numberOfReviewPositionsAvailable": 3,
                    "type": "Assembly Competition",
                    "reviewType": "Contest Review",
                    "contestName": "Module Assembly - TopCoder NodeJS Member Registration REST API"
                }
            ]
        }

+ Response 400 (application/json)

        {
            "name":"Bad Request",
            "value":"400",
            "description":"This message will explain why the request is invalid or cannot be served."
        }
        
+ Response 404 (application/json)

        {
            "name":"Not Found",
            "value":"404",
            "description":"This message will explain why the URI requested is invalid or the resource does not exist."
        }
        
+ Response 406 (application/json)

        {
            "name":"Not Acceptable",
            "value":"406",
            "description":"This message will explain why the Search parameters are invalid."
        }

+ Response 500 (application/json)

        {
            "name":"Internal Server Error",
            "value":"500",
            "description":"Unknown server error. Please contact support."
        }

+ Response 503 (application/json)

        {
            "name":"Service Unavailable",
            "value":"503",
            "description":"Servers are up but overloaded. Try again later."
        }

        
## Get Review Opportunity Detail [/develop/reviewOpportunities/{id}]
### Get Review Opportunity Information [GET]

+ Parameters

    + id (required, number, `30000000`) ... The contest id.

+ Response 200 (application/json)

        {
            "name": "PDS - Import and Persistence Update - Assembly Contest",
            "Phases":
            [
                {
                    "name": "Submission",
                    "start": "10.25.2013 23:02 EDT",
                    "end": "10.29.2013 23:02 EDT",
                    "duration": "143 hours"
                },
                {
                    "name": "Screening",
                    "start": "10.29.2013 23:02 EDT",
                    "end": "10.30.2013 23:02 EDT",
                    "duration": "24 hours"
                }
            ],
            "Positions":
            [
                {
                    "role": "Primary Reviewer",
                    "positions": 1,
                    "payment": 500
                },
                {
                    "role": "Secondary Reviewer",
                    "positions": 2,
                    "payment": 400
                }        
            ],
            "Applications":
            [
                {
                    "handle": "iRabbit",
                    "role": "Primary Reviewer",
                    "status": "Pending",
                    "applicationDate": "10.25.2013 23:02 EDT"
                },
                {
                    "handle": "iRabbit",
                    "role": "Secondary Reviewer",
                    "status": "Pending",
                    "applicationDate": "10.25.2013 23:02 EDT"
                },       
            ]
        }


+ Response 400 (application/json)

        {
            "name":"Bad Request",
            "value":"400",
            "description":"This message will explain why the request is invalid or cannot be served."
        }
        
+ Response 404 (application/json)

        {
            "name":"Not Found",
            "value":"404",
            "description":"This message will explain why the URI requested is invalid or the resource does not exist."
        }
        
+ Response 500 (application/json)

        {
            "name":"Internal Server Error",
            "value":"500",
            "description":"Unknown server error. Please contact support."
        }

+ Response 503 (application/json)

        {
            "name":"Service Unavailable",
            "value":"503",
            "description":"Servers are up but overloaded. Try again later."
        }

        
## Contest Reviewers Collection [/develop/reviewers/{contestType}]
### List reviewers of current contest type [GET]

+ Parameters
    + contestType (required, string, `Assembly`) ... The type of the contest. It can be 'Assembly', 'ComponentDevelopment', 'TestSuites', 'Reporting', 'ComponentDesign', 'Conceptualization', 'Specification', 'Architecture', 'UIPrototype', 'RIABuild', 'ContentCreation', 'TestScenarios', 'BugHunt'.

+ Response 200 (application/json)

        {
            "total": 4,
            "data": [
                {
                    "id": "23040226",
                    "handle": "AE-86",
                    "rating": "1212",
                    "photo": "1.gif"
                },
                {
                    "id": "23040228",
                    "handle": "AE-88",
                    "rating": "1920",
                    "photo": "2.gif"
                },
                {
                    "id": "23040258",
                    "handle": "AE-90",
                    "rating": "1386",
                    "photo": "3.gif"
                },
                {
                    "id": "13040058",
                    "handle": "XYZ",
                    "rating": "1776",
                    "photo": "4.gif"
                }
            ]
        }


+ Response 400 (application/json)

        {
            "name":"Bad Request",
            "value":"400",
            "description":"This message will explain why the request is invalid or cannot be served."
        }
        
+ Response 404 (application/json)

        {
            "name":"Not Found",
            "value":"404",
            "description":"This message will explain why the URI requested is invalid or the resource does not exist."
        }
        
+ Response 500 (application/json)

        {
            "name":"Internal Server Error",
            "value":"500",
            "description":"Unknown server error. Please contact support."
        }

+ Response 503 (application/json)

        {
            "name":"Service Unavailable",
            "value":"503",
            "description":"Servers are up but overloaded. Try again later."
        }

        
## Software Member Statistics [/develop/statistics/{handle}]
### Software Member Statistics [GET]

+ Parameters
    + handle (required, string, `iRabbit`) ... Member Handle

+ Response 200 (application/json)

        {
            "handle": "iRabbit",
            "Achievements":
            [
                "Five Rated Algorithm Competition",
                "Twenty-Five Rated Algorithm Competition"
            ]
            "Tracks":
            {
                "Development":
                [
                    "rating": 1659,
                    "percentile": 50%,
                    "rank": 9999,
                    "countryRank": 9999,
                    "schoolRank": 9999,
                    "volatility": 280,
                    "competitions": 37,
                    "maximumRating": 1693,
                    "minimumRating": 1035,
                    "reviewerRating": 1035,
                    "inquiries": 37,
                    "submissions": 36,
                    "submissionRate": "97.30%",
                    "passedScreening": 36,
                    "screeningSuccessRate": "100.00%",
                    "passedReview": 36,
                    "reviewSuccessRate": "100.00%",
                    "appeals": 279,
                    "appealSuccessRate": "33.33%",
                    "maximumScore": 100.00,
                    "minimumScore": 86.04,
                    "averageScore": 95.64,
                    "averagePlacement": 3.19,
                    "wins": 21,
                    "winPercentage": "58.33%",
                    "copilotCompletedContests": 300,
                    "copilotRepostedContests": 300,
                    "copilotFailedContests": 300,
                    "copilotFulfillment": "90%"
                ],
                "Assembly":
                [
                    "rating": 1659,
                    "percentile": 50%,
                    "rank": 9999,
                    "countryRank": 9999,
                    "schoolRank": 9999,
                    "volatility": 280,
                    "competitions": 37,
                    "maximumRating": 1693,
                    "minimumRating": 1035,
                    "reviewerRating": 1035,
                    "inquiries": 37,
                    "submissions": 36,
                    "submissionRate": "97.30%",
                    "passedScreening": 36,
                    "screeningSuccessRate": "100.00%",
                    "passedReview": 36,
                    "reviewSuccessRate": "100.00%",
                    "appeals": 279,
                    "appealSuccessRate": "33.33%",
                    "maximumScore": 100.00,
                    "minimumScore": 86.04,
                    "averageScore": 95.64,
                    "averagePlacement": 3.19,
                    "wins": 21,
                    "winPercentage": "58.33%",
                    "copilotCompletedContests": 300,
                    "copilotRepostedContests": 300,
                    "copilotFailedContests": 300,
                    "copilotFulfillment": "90%"
                ]
            }
        }

+ Response 400 (application/json)

        {
            "name":"Bad Request",
            "value":"400",
            "description":"This message will explain why the request is invalid or cannot be served."
        }
        
+ Response 404 (application/json)

        {
            "name":"Not Found",
            "value":"404",
            "description":"This message will explain why the URI requested is invalid or the resource does not exist."
        }
        
+ Response 500 (application/json)

        {
            "name":"Internal Server Error",
            "value":"500",
            "description":"Unknown server error. Please contact support."
        }

+ Response 503 (application/json)

        {
            "name":"Service Unavailable",
            "value":"503",
            "description":"Servers are up but overloaded. Try again later."
        }
        
## Software Member Rating History and Distribution [/develop/statistics/{handle}/{challengeType}]
### Software Member Rating History and Distribution [GET]

+ Parameters
    + handle (required, string, `iRabbit`) ... Member Handle
    + challengeType (required, String, `Development`) ... Challenge Type

+ Response 200 (application/json)

        {
            "history":
            [
                {
                    challengeId : 12345,
                    challengeName : 'awesome component',
                    date: "2012.9.10",
                    rating: 1000
                },
                {
                    challengeId : 12346,
                    challengeName : 'awesome component',
                    date: "2012.10.10",
                    rating: 1100
                }
            ],
            "distribution":
            [
                {
                    range: "2000-2100",
                    number: 10
                },
                {
                    range: "2100-2200",
                    number: 5
                }
            ] 
        
        }

+ Response 400 (application/json)

        {
            "name":"Bad Request",
            "value":"400",
            "description":"This message will explain why the request is invalid or cannot be served."
        }
        
+ Response 404 (application/json)

        {
            "name":"Not Found",
            "value":"404",
            "description":"This message will explain why the URI requested is invalid or the resource does not exist."
        }
        
+ Response 500 (application/json)

        {
            "name":"Internal Server Error",
            "value":"500",
            "description":"Unknown server error. Please contact support."
        }

+ Response 503 (application/json)

        {
            "name":"Service Unavailable",
            "value":"503",
            "description":"Servers are up but overloaded. Try again later."
        }
        
## Contest Types Collection [/develop/challengetypes]
### List all contest types [GET]
+ Response 200 (application/json)

        [
            {
                "contestCategoryId": 2,
                "contestTypeId": 1,
                "name": "Development",
                "description": "Development"
            },
            {
                "contestCategoryId": 1,
                "contestTypeId": 1,
                "name": "Design",
                "description": "Design"
            }
        ]

+ Response 400 (application/json)

        {
            "name":"Bad Request",
            "value":"400",
            "description":"This message will explain why the request is invalid or cannot be served."
        }
        
+ Response 404 (application/json)

        {
            "name":"Not Found",
            "value":"404",
            "description":"This message will explain why the URI requested is invalid or the resource does not exist."
        }
        
+ Response 500 (application/json)

        {
            "name":"Internal Server Error",
            "value":"500",
            "description":"Unknown server error. Please contact support."
        }

+ Response 503 (application/json)

        {
            "name":"Service Unavailable",
            "value":"503",
            "description":"Servers are up but overloaded. Try again later."
        }

        
## Search Contests [/develop/challenges?listType={listType}&pageIndex={pageIndex}&pageSize={pageSize}&sortColumn={sortColumn}&sortOrder={sortOrder}]
### Search Contests [GET]

+ Parameters
    + listType (optional, string, `Active`) ... The type of contests to search. It can only be 'ALL', 'ACTIVE', 'OPEN', 'PAST' or 'UPCOMING'. If it's null, 'ALL' will be should used.
    + filter (optional, string, `type`) ... Key of the filter key-value pair
    + value (optional, string, `Development`) ... Value of the filter key-value pair
    + pageIndex (optional, number, `1`) ... The paging number, 1-based, -1 if no paging. It can be null.
    + pageSize (optional, number, `50`) ... The max number of the results, should be set if pageIndex is set.
    + sortColumn (optional, string, `contestName`) ... The column name to sort, can be null.
    + sortOrder (optional, string, `asc`) ... The sorting order, can be null. If it's set, it can only be 'asc' or 'desc'.
    

+ Response 200 (application/json)

        {
            "total": 30,
            "pageIndex": 1,
            "pageSize": 3,
            "data": [
                {
                    "type": "Web Design",
                    "contestName": "Cornell - Responsive Storyboard Economics Department Site Redesign Contest",
                    "numberOfSubmissions": 16,
                    "numberOfRatedRegistrants": 27,
                    "numberOfUnratedRegistrants": 27,
                    "contestId": 30036096,
                    "projectId": 6789,
                    "registrationEndDate": "10.31.2013 10:10 EDT",
                    "submissionEndDate": "10.31.2013 10:09 EDT",
                    "prize": [1250, 500],
                    "reliabilityBonus": 0,
                    "digitalRunPoints": 500,
                    "cmc": "ab"
                },
                {
                    "type": "UI Prototype Competition",
                    "catalog": "UI Development",
                    "contestName": "Corningstone App UI Prototype 2",
                    "numberOfSubmissions": 0,
                    "numberOfRatedRegistrants": 27,
                    "numberOfUnratedRegistrants": 27,
                    "contestId": 30036099,
                    "projectId": 6484,
                    "registrationEndDate": "10.26.2013 16:01 EDT",
                    "submissionEndDate": "10.31.2013 16:06 EDT",
                    "prize": [1250, 500],
                    "reliabilityBonus": 660,
                    "digitalRunPoints": 990,
                    "cmc": "ab"
                },
                {
                    "type": "Content Creation",
                    "catalog": "UI Development",
                    "contestName": "Crowdsourced Application Security Standards and Review",
                    "numberOfSubmissions": 4,
                    "numberOfRatedRegistrants": 27,
                    "numberOfUnratedRegistrants": 27,
                    "contestId": 30036091,
                    "projectId": 6778,
                    "registrationEndDate": "10.28.2013 10:28 EDT",
                    "submissionEndDate": "10.31.2013 10:34 EDT",
                    "prize": [1250, 500],
                    "reliabilityBonus": 360,
                    "digitalRunPoints": 0,
                    "cmc": "ab"
                }
            ]
        }

+ Response 400 (application/json)

        {
            "name":"Bad Request",
            "value":"400",
            "description":"This message will explain why the request is invalid or cannot be served."
        }
        
+ Response 404 (application/json)

        {
            "name":"Not Found",
            "value":"404",
            "description":"This message will explain why the URI requested is invalid or the resource does not exist."
        }
        
+ Response 406 (application/json)

        {
            "name":"Not Acceptable",
            "value":"406",
            "description":"This message will explain why the Search parameters are invalid."
        }

+ Response 500 (application/json)

        {
            "name":"Internal Server Error",
            "value":"500",
            "description":"Unknown server error. Please contact support."
        }

+ Response 503 (application/json)

        {
            "name":"Service Unavailable",
            "value":"503",
            "description":"Servers are up but overloaded. Try again later."
        }

## Get Contest Detail [/develop/challenges/{id}]
### Get Contest Information [GET]

+ Parameters
    + id (required, number, `30000000`) ... The contest id.

+ Response 200 (application/json)
        
        {
            "type": "Web Design",
            "contestName": "Cornell - Responsive Storyboard Economics Department Site Redesign Contest",
            "description": "Welcome to Cornell Responsive Storyboard Economics Site Redesign contest. The goal of this contest is to redesign look and feel for one of our college site departments (economics) using base design and customer feedback provided in this contest. There are two pages that needs to be redesigned a",
            "numberOfSubmissions": 16,
            "numberOfRegistrants": 27,
            "numberOfPassedScreeningSubmissions": 27,
            "contestId": 30036096,
            "projectId": 6789,
            "registrationEndDate": "10.31.2013 10:10 EDT",
            "submissionEndDate": "10.31.2013 10:09 EDT",
            "prize":[1000, 250],
            "checkpoints":
                {
                    "prize": 100,
                    "number": 5
                },
            "reliabilityBonus": 0,
            "digitalRunPoints": 500,
            "cmc": "ab",
            "registrants" :
                [
                    {
                        "handle": "iRabbit",
                        "reliability": "100%",
                        "registrationDate": "10.31.2013 10:10 EDT"
                    },
                    {
                        "handle": "hohosky",
                        "reliability": "100%",
                        "registrationDate": "10.31.2013 10:10 EDT"
                    }
                ]
            "submissions" :
                [
                    {
                        "handle": "iRabbit",
                        "placement": 1,
                        "screeningScore": 97,
                        "initialScore": 97,
                        "final": 97,
                        "points": 100,
                        "submissionDate": "10.31.2013 10:10 EDT"
                    },
                    {
                        "handle": "hohosky",
                        "placement": 2,
                        "screeningScore": 97,
                        "initialScore": 96,
                        "final": 96,
                        "points": 50,
                        "submissionDate": "10.31.2013 10:10 EDT"
                    }
                ]
        }

+ Response 400 (application/json)

        {
            "name":"Bad Request",
            "value":"400",
            "description":"This message will explain why the request is invalid or cannot be served."
        }
        
+ Response 404 (application/json)

        {
            "name":"Not Found",
            "value":"404",
            "description":"This message will explain why the URI requested is invalid or the resource does not exist."
        }
        
+ Response 500 (application/json)

        {
            "name":"Internal Server Error",
            "value":"500",
            "description":"Unknown server error. Please contact support."
        }

+ Response 503 (application/json)

        {
            "name":"Service Unavailable",
            "value":"503",
            "description":"Servers are up but overloaded. Try again later."
        }      
         

## Top Ranked Members [/develop/statistics/tops/{contestType}?pageIndex={pageIndex}&pageSize={pageSize}]
### Top Ranked Members [GET]

+ Parameters
    + contestType (required, string, `design`) ... Ranking Type, support "design", "development", "conceptualization", "specification", "architecture", "assembly", "test_suites", "test_scenarios", "ui_prototype", "ria_build", "content_creation"
    + pageIndex (optional, number, `1`) ... The paging number, 1-based, -1 if no paging. It can be null. Default 1.
    + pageSize (optional, number, `50`) ... The max number of the results, should be set if pageIndex is set. Default 50.
    
+ Response 200 (application/json)

        {
            "total": 30,
            "pageIndex": 1,
            "pageSize": 3,
            "data": 
            [
                {
                    "rank": 1,
                    "handle": "Petr",
                    "userId": 123457899,
                    "color": "Red",
                    "rating": 3000
                },
                {
                    "rank": 2,
                    "handle": "ACRush",
                    "userId": 123457891,
                    "color": "Red",
                    "rating": 2500
                },
                {
                    "rank": 3,
                    "handle": "lympanda",
                    "userId": 123457892,
                    "color": "Yellow",
                    "rating": 2000
                }
            ]
        }


+ Response 400 (application/json)

        {
            "name":"Bad Request",
            "value":"400",
            "description":"This message will explain why the request is invalid or cannot be served."
        }
        
+ Response 404 (application/json)

        {
            "name":"Not Found",
            "value":"404",
            "description":"This message will explain why the URI requested is invalid or the resource does not exist."
        }
        
+ Response 500 (application/json)

        {
            "name":"Internal Server Error",
            "value":"500",
            "description":"Unknown server error. Please contact support."
        }

+ Response 503 (application/json)

        {
            "name":"Service Unavailable",
            "value":"503",
            "description":"Servers are up but overloaded. Try again later."
        }
        

# Group Studio Contests

## View Studio Contests [/design/challenges?listType={listType}&pageSize={pageSize}&pageIndex={pageIndex}&sortColumn={sortColumn}&sortOrder={sortOrder}]
### View Studio Contests [GET]

+ Parameters
    + listType (optional, string, `Active`) ... The type of contests to search. It can only be 'ACTIVE', 'OPEN', 'PAST' or 'UPCOMING'. If it's null, 'Active' will be should used.
    + pageIndex (optional, number, `1`) ... The paging number, 1-based, -1 if no paging. It can be null.
    + pageSize (optional, number, `50`) ... The max number of the results, should be set if pageIndex is set.
    + sortColumn (optional, string, `contestName`) ... The column name to sort, can be null.
    + sortOrder (optional, string, `asc`) ... The sorting order, can be null. If it's set, it can only be 'asc' or 'desc'.
    
+ Response 200 (application/json)
        
        {
            "total": 30,
            "pageIndex": 1,
            "pageSize": 2,
            "data": 
            [
                {
                    "type": "Web Design",
                    "contestName": "Cornell - Responsive Storyboard Economics Department Site Redesign Contest",
                    "startDate": "10.31.2013 10:10 EDT",
                    "round1EndDate": "10.31.2013 10:10 EDT",
                    "endDate": "10.31.2013 10:10 EDT",
                    "timeLeft": "2 days",
                    "prize": 1750,
                    "points": 600,
                    "registrants": 15,
                    "submissions": 0,
                    "cmc": "ab"
                },
                {
                    "type": "Web Design",
                    "contestName": "Cornell - Responsive Storyboard Economics Department Site Redesign Contest",
                    "startDate": "10.31.2013 10:10 EDT",
                    "round1EndDate": "10.31.2013 10:10 EDT",
                    "endDate": "10.31.2013 10:10 EDT",
                    "timeLeft": "2 days",
                    "prize": 1750,
                    "points": 650,
                    "registrants": 15,
                    "submissions": 0,
                    "cmc": "ab"
                }
            ]
        }

+ Response 400 (application/json)

        {
            "name":"Bad Request",
            "value":"400",
            "description":"This message will explain why the request is invalid or cannot be served."
        }
        
+ Response 404 (application/json)

        {
            "name":"Not Found",
            "value":"404",
            "description":"This message will explain why the URI requested is invalid or the resource does not exist."
        }
        
+ Response 406 (application/json)

        {
            "name":"Not Acceptable",
            "value":"406",
            "description":"This message will explain why the Search parameters are invalid."
        }

+ Response 500 (application/json)

        {
            "name":"Internal Server Error",
            "value":"500",
            "description":"Unknown server error. Please contact support."
        }

+ Response 503 (application/json)

        {
            "name":"Service Unavailable",
            "value":"503",
            "description":"Servers are up but overloaded. Try again later."
        }
        
## Get Studio Contest Detail [/design/challenges/{id}]
### Get Studio Contest Information [GET]

+ Parameters
    + id (required, number, `30000000`) ... The contest id.

+ Response 200 (application/json)

        {
            "type": "Web Design",
            "contestName": "Cornell - Responsive Storyboard Economics Department Site Redesign Contest",
            "description": "Welcome to ¡°Cornell ¨C Responsive Storyboard Economics Site Redesign contest¡±. The goal of this contest  is to redesign look and feel for one of our college site departments (economics) using base design and customer feedback provided in this contest. There are two pages that needs to be redesigned a",
            "prize":[1000, 250],
            "milestone":
            [
                "prize": 100,
                "number": 5
            ]
            "points": 500,
            "nextDeadlineTime": "10.31.2013 10:10 EDT",
            "nextDeadlineName": "Checkpoint Submission Deadline",
            "cmc": "ab",
            "checkpoints":
            [
                {
                    "submissionId": 12345,
                    "submitter": "iamtong",
                    "submissionTime": "10.31.2013 10:10 EDT"
                },
                {
                    "submissionId": 12345,
                    "submitter": "iamtong",
                    "submissionTime": "10.31.2013 10:10 EDT"
                }
            ]
            "submissions":
            [
                {
                    "submissionId": 12345,
                    "submitter": "iamtong",
                    "submissionTime": "10.31.2013 10:10 EDT"
                },
                {
                    "submissionId": 12345,
                    "submitter": "iamtong",
                    "submissionTime": "10.31.2013 10:10 EDT"
                }
            ]    
            "winners":
            [
                {
                    "submissionId": 12345,
                    "submitter": "iamtong",
                    "submissionTime": "10.31.2013 10:10 EDT",
                    "points": 50,
                    "rank": 1
                },
                {
                    "submissionId": 12345,
                    "submitter": "iamtong",
                    "submissionTime": "10.31.2013 10:10 EDT",
                    "points": 50,
                    "rank": 2
                }
            ]     
        }

+ Response 400 (application/json)

        {
            "name":"Bad Request",
            "value":"400",
            "description":"This message will explain why the request is invalid or cannot be served."
        }
        
+ Response 404 (application/json)

        {
            "name":"Not Found",
            "value":"404",
            "description":"This message will explain why the URI requested is invalid or the resource does not exist."
        }
        
+ Response 500 (application/json)

        {
            "name":"Internal Server Error",
            "value":"500",
            "description":"Unknown server error. Please contact support."
        }

+ Response 503 (application/json)

        {
            "name":"Service Unavailable",
            "value":"503",
            "description":"Servers are up but overloaded. Try again later."
        }
        
## Review Oppertunities [/design/reviewOpportunities]
### Get Review Oppertunities [GET]

+ Response 200 (application/json)

        {
         "data": [
          {
            "contestName": "Cornell - Responsive Storyboard Economics Department Site Redesign Contest",
            "round1ScheduledStartDate": "11.01.2013 11:01 EDT",
            "round2ScheduledStartDate": "11.01.2013 11:01 EDT",
            "reviewerPayment": 442,
            "reviewer": "leben",
            "type":"screening"
          },
          {
            "contestName": "Cornell - Responsive Storyboard",
            "round1ScheduledStartDate": "11.01.2013 11:01 EDT",
            "round2ScheduledStartDate": "11.01.2013 11:01 EDT",
            "reviewerPayment": 442,
            "reviewer": "leben",
            "type":"screening"
          }
         ]
        }

+ Response 400 (application/json)

        {
            "name":"Bad Request",
            "value":"400",
            "description":"This message will explain why the request is invalid or cannot be served."
        }
        
+ Response 404 (application/json)

        {
            "name":"Not Found",
            "value":"404",
            "description":"This message will explain why the URI requested is invalid or the resource does not exist."
        }
        
+ Response 500 (application/json)

        {
            "name":"Internal Server Error",
            "value":"500",
            "description":"Unknown server error. Please contact support."
        }

+ Response 503 (application/json)

        {
            "name":"Service Unavailable",
            "value":"503",
            "description":"Servers are up but overloaded. Try again later."
        }
        
## Get Review Oppertunity Detail [/design/reviewOpportunities/{id}]
### Get Review Oppertunity Information [GET]

+ Parameters

    + id (required, number, `30000000`) ... The contest id.

+ Response 200 (application/json)

        {
            "name": "PDS - Import and Persistence Update - Assembly Contest",
            "Phases":
            [
                {
                    "name": "Submission",
                    "start": "10.25.2013 23:02 EDT",
                    "end": "10.29.2013 23:02 EDT",
                    "duration": "143 hours"
                },
                {
                    "name": "Screening",
                    "start": "10.29.2013 23:02 EDT",
                    "end": "10.30.2013 23:02 EDT",
                    "duration": "24 hours"
                }
            ],
            "Positions":
            [
                {
                    "role": "Screener",
                    "positions": 1,
                    "payment": 500
                }   
            ]
        }

+ Response 400 (application/json)

        {
            "name":"Bad Request",
            "value":"400",
            "description":"This message will explain why the request is invalid or cannot be served."
        }
        
+ Response 404 (application/json)

        {
            "name":"Not Found",
            "value":"404",
            "description":"This message will explain why the URI requested is invalid or the resource does not exist."
        }
        
+ Response 500 (application/json)

        {
            "name":"Internal Server Error",
            "value":"500",
            "description":"Unknown server error. Please contact support."
        }

+ Response 503 (application/json)

        {
            "name":"Service Unavailable",
            "value":"503",
            "description":"Servers are up but overloaded. Try again later."
        }
        
## Studio Contest Types Collection [/design/challengetypes]
### List all contest types [GET]
+ Response 200 (application/json)

        [
            {
                "contestCategoryId": 1,
                "contestTypeId": 1,
                "name": "Logo Design",
                "description": "Logo competitions on Studio range from conceptualizing the primary identifying mark of a company to creating a product logo or service mark."
            },
            {
                "contestCategoryId": 1,
                "contestTypeId": 2,
                "name": "Print Design",
                "description": "Print competitions can range from a poster for a company event, to a tri-fold brochure promoting services."
            },
            {
                "contestCategoryId": 1,
                "contestTypeId": 3,
                "name": "Presentation Design",
                "description": "Presentation design contests organize marketing or sales material into a professional design."
            },
            {
                "contestCategoryId": 2,
                "contestTypeId": 1,
                "name": "Web and Application Design",
                "description": "Web and App design contests are called storyboards."
            },
            {
                "contestCategoryId": 2,
                "contestTypeId": 2,
                "name": "Banners/ Small Element Design",
                "description": "This category covers traditional web banners, along with promos that can be used both on web sites and email newsletters."
            },
            {
                "contestCategoryId": 2,
                "contestTypeId": 3,
                "name": "Icons",
                "description": "Icons are designed for web sites, print publications, applications, mobile apps, and anywhere else where icons may be used."
            },
            {
                "contestCategoryId": 3,
                "contestTypeId": 1,
                "name": "Wireframe",
                "description": "Wireframe Competitions are designed to take the requirement documents inputs from the Specification Contest (or directly from the client) and create a roadmap of the working application."
            },
            {
                "contestCategoryId": 3,
                "contestTypeId": 2,
                "name": "Idea Generation",
                "description": "This unique type of contest asks competitors to conceptualize an idea and present it in written format, often with drawings or other diagrams to help explain the idea."
            },
            {
                "contestCategoryId": 4,
                "contestTypeId": 1,
                "name": "UI Prototype",
                "description": "UI Prototype Competitions are designed to take the graphics (UI storyboards) and information architecture (IA wireframes) of a web site or application and create a demonstration of the working application."
            },
            {
                "contestCategoryId": 4,
                "contestTypeId": 2,
                "name": "RIA Build",
                "description": "Rich Internet Application (RIA) Build Competitions provide the build of small applications used both on the Internet and on the desktop."
            }
        ]

+ Response 400 (application/json)

        {
            "name":"Bad Request",
            "value":"400",
            "description":"This message will explain why the request is invalid or cannot be served."
        }
        
+ Response 404 (application/json)

        {
            "name":"Not Found",
            "value":"404",
            "description":"This message will explain why the URI requested is invalid or the resource does not exist."
        }
        
+ Response 500 (application/json)

        {
            "name":"Internal Server Error",
            "value":"500",
            "description":"Unknown server error. Please contact support."
        }

+ Response 503 (application/json)

        {
            "name":"Service Unavailable",
            "value":"503",
            "description":"Servers are up but overloaded. Try again later."
        }
        
## Studio Member Statistics [/design/statistics/{handle}]
### Studio Member Statistics [GET]

+ Parameters
    + handle (required, string, `iRabbit`) ... Member Handle

+ Response 200 (application/json)

        {
            "handle": "iRabbit",
            "Achievements":
            [
                "Five Rated Algorithm Competition",
                "Twenty-Five Rated Algorithm Competition",
            ],
            "Tracks":
            {
                "Web Design":
                [
                    "numberOfSubmissions": 100,
                    "numberOfPassedScreeningSubmissions": 100,
                    "numberOfWinningSubmissions": 80,
                    "copilotCompletedContests": 100,
                    "copilotFailedContests": 100
                ],
                "Mobile Design":
                [
                    "numberOfSubmissions": 100,
                    "numberOfPassedScreeningSubmissions": 100,
                    "numberOfWinningSubmissions": 80,
                    "copilotCompletedContests": 100,
                    "copilotFailedContests": 100
                ]
            }
        }

+ Response 400 (application/json)

        {
            "name":"Bad Request",
            "value":"400",
            "description":"This message will explain why the request is invalid or cannot be served."
        }
        
+ Response 404 (application/json)

        {
            "name":"Not Found",
            "value":"404",
            "description":"This message will explain why the URI requested is invalid or the resource does not exist."
        }
        
+ Response 500 (application/json)

        {
            "name":"Internal Server Error",
            "value":"500",
            "description":"Unknown server error. Please contact support."
        }

+ Response 503 (application/json)

        {
            "name":"Service Unavailable",
            "value":"503",
            "description":"Servers are up but overloaded. Try again later."
        }
        
## Top Ranked Members [/design/statistics/tops/{challengeType}]
### Top Ranked Members [GET]

+ Parameters
    + challengeType (required, string, `Logo`) ... The type of the contest

+ Response 200 (application/json)

        {
            "total": 30,
            "pageIndex": 1,
            "pageSize": 3,
            "data": 
            [
                {
                    "rank": 1,
                    "handle": "Petr",
                    "userId": 123457898,
                    "color": "Red",
                    "numberOfWinningSubmissions": 3000
                },
                {
                    "rank": 2,
                    "handle": "ACRush",
                    "userId": 123457899,
                    "color": "Red",
                    "numberOfWinningSubmissions": 2500
                },
                {
                    "rank": 3,
                    "handle": "lympanda",
                    "userId": 123457891,
                    "color": "Yellow",
                    "numberOfWinningSubmissions": 2000
                }
            ]
        }

+ Response 400 (application/json)

        {
            "name":"Bad Request",
            "value":"400",
            "description":"This message will explain why the request is invalid or cannot be served."
        }
        
+ Response 404 (application/json)

        {
            "name":"Not Found",
            "value":"404",
            "description":"This message will explain why the URI requested is invalid or the resource does not exist."
        }
        
+ Response 500 (application/json)

        {
            "name":"Internal Server Error",
            "value":"500",
            "description":"Unknown server error. Please contact support."
        }

+ Response 503 (application/json)

        {
            "name":"Service Unavailable",
            "value":"503",
            "description":"Servers are up but overloaded. Try again later."
        }
        
# Group Algorithms Contests

## Contest Types Collection [/data/challengetypes]
### List all contest types [GET]
+ Response 200 (application/json)

        [
            {
                "contestCategoryId": 1,
                "contestTypeId": 1,
                "name": "Single Round Match (SRM)",
                "description": "The Algorithm competitions are timed contests where all contestants compete online and are given the same problems to solve under the same time constraints."
            },
            {
                "contestCategoryId": 1,
                "contestTypeId": 2,
                "name": "Marathon Match",
                "description": "TopCoder holds several types of Marathon Match events, typically at least once per month."
            }
        ]

+ Response 400 (application/json)

        {
            "name":"Bad Request",
            "value":"400",
            "description":"This message will explain why the request is invalid or cannot be served."
        }
        
+ Response 404 (application/json)

        {
            "name":"Not Found",
            "value":"404",
            "description":"This message will explain why the URI requested is invalid or the resource does not exist."
        }
        
+ Response 500 (application/json)

        {
            "name":"Internal Server Error",
            "value":"500",
            "description":"Unknown server error. Please contact support."
        }

+ Response 503 (application/json)

        {
            "name":"Service Unavailable",
            "value":"503",
            "description":"Servers are up but overloaded. Try again later."
        }
        
## Review Opportunities Collection [/data/reviewOpportunities]
### List all review opportunities [GET]
+ Response 200 (application/json)

        [
            "total": 2,
            "pageIndex": 1,
            "pageSize": 10,
            "data": [
             {
               "id": 10059,
               "reviewerPayment": 100,
               "numberOfSubmissions": 2,
               "opensOn": "10.11.2013 13:00 EDT",
               "reviewStart": "10.14.2013 13:06 EDT",
               "reviewEnd": "10.16.2013 13:06 EDT",
               "numberOfReviewPositionsAvailable": 3,
               "type": "Screening",
               "reviewType": "Contest Review",
               "contestName": "Algorithms contest 1"
             },
             {
               "id": 10160,
               "reviewerPayment": 100,
               "numberOfSubmissions": 0,
               "opensOn": "10.11.2013 13:00 EDT",
               "reviewStart": "10.14.2013 13:06 EDT",
               "reviewEnd": "10.16.2013 13:06 EDT",
               "numberOfReviewPositionsAvailable": 2,
               "type": "Screening",
               "reviewType": "Contest Review",
               "contestName": "Algorithms contest 2"
             }
        ]

+ Response 400 (application/json)

        {
            "name":"Bad Request",
            "value":"400",
            "description":"This message will explain why the request is invalid or cannot be served."
        }
        
+ Response 404 (application/json)

        {
            "name":"Not Found",
            "value":"404",
            "description":"This message will explain why the URI requested is invalid or the resource does not exist."
        }
        
+ Response 500 (application/json)

        {
            "name":"Internal Server Error",
            "value":"500",
            "description":"Unknown server error. Please contact support."
        }

+ Response 503 (application/json)

        {
            "name":"Service Unavailable",
            "value":"503",
            "description":"Servers are up but overloaded. Try again later."
        }
        


## Algorithm review opportunity details [/data/reviewopportunities/{id}]
### Get algorithm review opportunity details [GET]

+ Parameters
    + id (required, number, `10059`) ... The id of this review opportunity.

+ Response 200 (application/json)

        {
            "contestId": 3005067,
            "contestName": 'Algorithm 1',
            "timeline": [
                {
                    "phase": "Submission",
                    "start": "11.01.2013",
                    "end": "11.05.2013",
                    "duration": "95"
                },
                {
                    "phase": "Screening",
                    "start": "11.05.2013",
                    "end": "11.06.2013",
                    "duration": "24"
                },
                {
                    "phase": "Review",
                    "start": "11.06.2013",
                    "end": "11.08.2013",
                    "duration": "48"
                }
            ],
            "openPositions": [
                {
                    "role": "Secondary Reviewer",
                    "positions": "2",
                    "payment": "$216.22 *"
                }
            ],
            "reviewApplications": [
                {
                    "handle": "heffan",
                    "role": "Secondary Reviewer",
                    "status": "Pending",
                    "applicationDate": "11.01.2013 02:31 EDT"
                }
            ]
        }

+ Response 400 (application/json)

        {
            "name":"Bad Request",
            "value":"400",
            "description":"This message will explain why the request is invalid or cannot be served."
        }
        
+ Response 404 (application/json)

        {
            "name":"Not Found",
            "value":"404",
            "description":"This message will explain why the URI requested is invalid or the resource does not exist."
        }
        
+ Response 500 (application/json)

        {
            "name":"Internal Server Error",
            "value":"500",
            "description":"Unknown server error. Please contact support."
        }

+ Response 503 (application/json)

        {
            "name":"Service Unavailable",
            "value":"503",
            "description":"Servers are up but overloaded. Try again later."
        }
        
        
## View Algorithm SRM Challenges [/data/srm/challenges?listType={listType}&pageSize={pageSize}&pageIndex={pageIndex}&sortColumn={sortColumn}&sortOrder={sortOrder}]
### View Algorithm SRM Challenges [GET]

+ Parameters
    + listType (optional, string, `Active`) ... The type of contests to search. It can only be 'ACTIVE', 'OPEN', 'PAST' or 'UPCOMING'. If it's null, 'Active' will be should used.
    + filter (optional, string, `type`) ... Key of the filter key-value pair
    + value (optional, string, `Development`) ... Value of the filter key-value pair    
    + pageIndex (optional, number, `1`) ... The paging number, 1-based, -1 if no paging. It can be null.
    + pageSize (optional, number, `50`) ... The max number of the results, should be set if pageIndex is set.
    + sortColumn (optional, string, `contestName`) ... The column name to sort, can be null.
    + sortOrder (optional, string, `asc`) ... The sorting order, can be null. If it's set, it can only be 'asc' or 'desc'.
    
+ Response 200 (application/json)
        
        {
                "total": 450,
                "pageIndex": 1,
                "pageSize": 2,
                "data": [
                {
                    "roundId": 15761,
                    "name": "SRM 595",
                    "startDate": "08.22.2013 13:30 EDT",
                    "totalCompetitors": 911,
                    "divICompetitors": 410,
                    "divIICompetitors": 501,
                    "divITotalSolutionsSubmitted": 486,
                    "divIAverageSolutionsSubmitted": 1.19,
                    "divIITotalSolutionsSubmitted": 486,
                    "divIIAverageSolutionsSubmitted": 1.19,
                    "divITotalSolutionsChallenged": 486,
                    "divIAverageSolutionsChallenged": 1.19,
                    "divIITotalSolutionsChallenged": 486,
                    "divIIAverageSolutionsChallenged": 1.19
                },
                {
                    "roundId": 15684,
                    "name": "SRM 594",
                    "startDate": "08.22.2013 13:30 EDT",
                    "totalCompetitors": 911,
                    "divICompetitors": 410,
                    "divIICompetitors": 501,
                    "divITotalSolutionsSubmitted": 486,
                    "divIAverageSolutionsSubmitted": 1.19,
                    "divIITotalSolutionsSubmitted": 486,
                    "divIIAverageSolutionsSubmitted": 1.19,
                    "divITotalSolutionsChallenged": 486,
                    "divIAverageSolutionsChallenged": 1.19,
                    "divIITotalSolutionsChallenged": 486,
                    "divIIAverageSolutionsChallenged": 1.19
                }
            ]
        }

+ Response 400 (application/json)

        {
            "name":"Bad Request",
            "value":"400",
            "description":"This message will explain why the request is invalid or cannot be served."
        }
        
+ Response 404 (application/json)

        {
            "name":"Not Found",
            "value":"404",
            "description":"This message will explain why the URI requested is invalid or the resource does not exist."
        }
        
+ Response 406 (application/json)

        {
            "name":"Not Acceptable",
            "value":"406",
            "description":"This message will explain why the Search parameters are invalid."
        }

+ Response 500 (application/json)

        {
            "name":"Internal Server Error",
            "value":"500",
            "description":"Unknown server error. Please contact support."
        }

+ Response 503 (application/json)

        {
            "name":"Service Unavailable",
            "value":"503",
            "description":"Servers are up but overloaded. Try again later."
        }
        
## View Algorithm Marathon Challenges [/data/marathon/challenges?listType={listType}&pageSize={pageSize}&pageIndex={pageIndex}&sortColumn={sortColumn}&sortOrder={sortOrder}]
### View Algorithm Marathon Challenges [GET]

+ Parameters
    + listType (optional, string, `Active`) ... The type of contests to search. It can only be 'ACTIVE', 'OPEN', 'PAST' or 'UPCOMING'. If it's null, 'Active' will be should used.
    + filter (optional, string, `type`) ... Key of the filter key-value pair
    + value (optional, string, `Development`) ... Value of the filter key-value pair    
    + pageIndex (optional, number, `1`) ... The paging number, 1-based, -1 if no paging. It can be null.
    + pageSize (optional, number, `50`) ... The max number of the results, should be set if pageIndex is set.
    + sortColumn (optional, string, `contestName`) ... The column name to sort, can be null.
    + sortOrder (optional, string, `asc`) ... The sorting order, can be null. If it's set, it can only be 'asc' or 'desc'.
    
+ Response 200 (application/json)
        
        {
                "total": 450,
                "pageIndex": 1,
                "pageSize": 2,
                "data": [
                {
                    "roundId": 15761,
                    "fullName": "USAID and Humanity United",
                    "shortName": "Tech Challenge for Atrocity Prevention",
                    "startDate": "08.22.2013 13:30 EDT",
                    "endDate": "08.22.2013 13:30 EDT",
                    "winnerHandle": "nhzp339",
                    "winnerScore": 376.79
                },
                {
                    "roundId": 15684,
                    "fullName": "Marathon Match 81",
                    "shortName": "Marathon Match 81",
                    "startDate": "06.05.2013 12:43 EDT",
                    "endDate": "06.05.2013 12:43 EDT",
                    "winnerHandle": "ACRush",
                    "winnerScore": 999534.81
                }
            ]
        }

+ Response 400 (application/json)

        {
            "name":"Bad Request",
            "value":"400",
            "description":"This message will explain why the request is invalid or cannot be served."
        }
        
+ Response 404 (application/json)

        {
            "name":"Not Found",
            "value":"404",
            "description":"This message will explain why the URI requested is invalid or the resource does not exist."
        }
        
+ Response 406 (application/json)

        {
            "name":"Not Acceptable",
            "value":"406",
            "description":"This message will explain why the Search parameters are invalid."
        }

+ Response 500 (application/json)

        {
            "name":"Internal Server Error",
            "value":"500",
            "description":"Unknown server error. Please contact support."
        }

+ Response 503 (application/json)

        {
            "name":"Service Unavailable",
            "value":"503",
            "description":"Servers are up but overloaded. Try again later."
        }

## Get Algorithm Marathon Challenge Detail [/data/marathon/challenges/{id}]
### Get Algorithm Marathon Information [GET]

+ Parameters
    + id (required, number, `30000000`) ... The contest id.

+ Response 200 (application/json)

        {
            "roundId": 15678,
            "fullName": "SensorFusion2",
            "shortName": "SensorFusion2",
            "numberOfRegistrants": 295,
            "numberOfSubmissions": 215,
            "numberOfCompetitors": 32,
            "startDate": "05.22.2013 09:00 EDT",
            "endDate": "06.05.2013 09:00 EDT",
            "systemTestDate": "06.05.2013 09:00 EDT",
            "winnerHandle": "JacoCronje",
            "winnerScore": 403096.68,
            "currentProgress": 
            {
                "groupType": "HOUR",
                "progressResources": 
                [
                    {
                        "currentTopProvisionalScore": 0,
                        "currentNoOfSubmissions": 0,
                        "currentNoOfcompetitors": 0,
                        "currentNoOfRegistrants": 4,
                        "date": "05.22.2013 10:00 EDT",
                        "topUserHandle": ""
                    },
                    {
                        "currentTopProvisionalScore": 0,
                        "currentNoOfSubmissions": 0,
                        "currentNoOfcompetitors": 0,
                        "currentNoOfRegistrants": 9,
                        "date": "05.22.2013 11:00 EDT",
                        "topUserHandle": ""
                    }
                ]
            },
             "registrantsRatingSummary": 
             [
                {
                    "color": "Blue",
                    "numberOfMembers": 18
                },
                {
                    "color": "Gray",
                    "numberOfMembers": 26
                }
            ]
        }

+ Response 400 (application/json)

        {
            "name":"Bad Request",
            "value":"400",
            "description":"This message will explain why the request is invalid or cannot be served."
        }
        
+ Response 404 (application/json)

        {
            "name":"Not Found",
            "value":"404",
            "description":"This message will explain why the URI requested is invalid or the resource does not exist."
        }
        
+ Response 406 (application/json)

        {
            "name":"Not Acceptable",
            "value":"406",
            "description":"This message will explain why the Search parameters are invalid."
        }

+ Response 500 (application/json)

        {
            "name":"Internal Server Error",
            "value":"500",
            "description":"Unknown server error. Please contact support."
        }

+ Response 503 (application/json)

        {
            "name":"Service Unavailable",
            "value":"503",
            "description":"Servers are up but overloaded. Try again later."
        }

## Get Algorithm SRM Detail [/data/srm/challenges/{id}]
### Get Algorithm SRM Information [GET]

+ Parameters
    + id (required, number, `30000000`) ... The contest id.

+ Response 200 (application/json)

        {
            "roundId": 15707,
            "name": "SRM 595",
            "leaders":
            {
                "divisionI":
                [
                    {
                        "handle": "Petr",
                        "score": 1531.29,
                        "placed": 1,
                        "room": 1
                    },
                    {
                        "handle": "ir5",
                        "score": 1530.29,
                        "placed": 2,
                        "room": 2
                    }
                ],
                "divisionII":
                [
                    {
                        "handle": "xyz111",
                        "score": 1531.29,
                        "placed": 1,
                        "room": 1
                    },
                    {
                        "handle": "jason_yu",
                        "score": 1530.29,
                        "placed": 2,
                        "room": 2
                    }
                ]
            },
            "problems":
            {
                "divisionI":
                [
                    {
                        "level": 1,
                        "problemName": "easy",
                        "submissions": 378,
                        "correct%": 82.01,
                        "averagePoints": 206.36
                    },
                    {
                        "level": 2,
                        "problemName": "easy",
                        "submissions": 378,
                        "correct%": 82.01,
                        "averagePoints": 206.36
                    },
                    {
                        "level": 3,
                        "problemName": "easy",
                        "submissions": 378,
                        "correct%": 82.01,
                        "averagePoints": 206.36
                    }
                ],
                "divisionII":
                [
                    {
                        "level": 1,
                        "problemName": "easy",
                        "submissions": 378,
                        "correct%": 82.01,
                        "averagePoints": 206.36
                    },
                    {
                        "level": 2,
                        "problemName": "easy",
                        "submissions": 378,
                        "correct%": 82.01,
                        "averagePoints": 206.36
                    },
                    {
                        "level": 3,
                        "problemName": "easy",
                        "submissions": 378,
                        "correct%": 82.01,
                        "averagePoints": 206.36
                    }
                ]
            }
        }

+ Response 400 (application/json)

        {
            "name":"Bad Request",
            "value":"400",
            "description":"This message will explain why the request is invalid or cannot be served."
        }
        
+ Response 404 (application/json)

        {
            "name":"Not Found",
            "value":"404",
            "description":"This message will explain why the URI requested is invalid or the resource does not exist."
        }
        
+ Response 406 (application/json)

        {
            "name":"Not Acceptable",
            "value":"406",
            "description":"This message will explain why the Search parameters are invalid."
        }

+ Response 500 (application/json)

        {
            "name":"Internal Server Error",
            "value":"500",
            "description":"Unknown server error. Please contact support."
        }

+ Response 503 (application/json)

        {
            "name":"Service Unavailable",
            "value":"503",
            "description":"Servers are up but overloaded. Try again later."
        }

## Algorithm Member Marathon Statistics [/data/marathon/statistics/{handle}]
### Algorithm Member Marathon Statistics [GET]

+ Parameters
    + handle (required, string, `iRabbit`) ... Member Handle

+ Response 200 (application/json)
        
        {
            "handle": "iRabbit",
            "rating": 1659,
            "percentile": 50%,
            "rank": 9999,
            "countryRank": 9999,
            "schoolRank": 9999,
            "volatility": 280,
            "maximumRating": 1693,
            "minimumRating": 1035,
            "defaultLanguage": "C++",
            "competitions": 29,
            "mostRecentEventName": "SRM 441",
            "mostRecentEventDate": "05.27.09",
            "bestRank": 21,
            "wins": 0,
            "topFiveFinishes": 0,
            "topTenFinishes": 0,
            "avgRank": 107.08,
            "avgNumSubmissions": 4,62,
            "competitions": 13,
            "achievements":
            [
                "Five Rated Algorithm Competition",
                "Twenty-Five Rated Algorithm Competition",
            ],
            "history":
            [
                {
                    "challengeId" : 12345,
                    "challengeName" : 'awesome component',
                    "date": "2012.9.10",
                    "rating": 1000,
                    "placement": 3,
                    "percentile": 88.3
                },
                {
                    "challengeId" : 12346,
                    "challengeName" : 'awesome component',
                    "date": "2012.10.10",
                    "rating": 1100,
                    "placement": 1,
                    "percentile": 86.3
                }
            ],
            "distribution":
            [
                {
                    "range": "2000-2100",
                    "number": 10
                },
                {
                    "range": "2100-2200",
                    "number": 5
                }
            ]
        }        

+ Response 400 (application/json)

        {
            "name":"Bad Request",
            "value":"400",
            "description":"This message will explain why the request is invalid or cannot be served."
        }
        
+ Response 404 (application/json)

        {
            "name":"Not Found",
            "value":"404",
            "description":"This message will explain why the URI requested is invalid or the resource does not exist."
        }
        

+ Response 500 (application/json)

        {
            "name":"Internal Server Error",
            "value":"500",
            "description":"Unknown server error. Please contact support."
        }

+ Response 503 (application/json)

        {
            "name":"Service Unavailable",
            "value":"503",
            "description":"Servers are up but overloaded. Try again later."
        }

## Algorithm Member SRM Statistics [/data/srm/statistics/{handle}]
### Algorithm Member SRM Statistics [GET]

+ Parameters
    + handle (required, string, `iRabbit`) ... Member Handle

+ Response 200 (application/json)

        {
            "handle": "iRabbit",
            "rating": 1659,
            "percentile": 50%,
            "rank": 9999,
            "countryRank": 9999,
            "schoolRank": 9999,
            "volatility": 280,
            "maximumRating": 1693,
            "minimumRating": 1035,
            "defaultLanguage": "C++",
            "competitions": 29,
            "mostRecentEventName": "SRM 441",
            "mostRecentEventDate": "05.27.09",
            "Achievements":
            [
                "Five Rated Algorithm Competition",
                "Twenty-Five Rated Algorithm Competition",
            ]
            "Divisions":
            {
                "Division I":
                {
                    "Level One":
                    {
                        "submitted": 25,
                        "failedChallenge": 2,
                        "failedSys.Test": 4,
                        "success %": 76.00%
                    },
                    "Level Two":
                    {
                        "submitted": 25,
                        "failedChallenge": 2,
                        "failedSys.Test": 4,
                        "success%": 76.00%
                    },
                    "Level Three":
                    {
                        "submitted": 25,
                        "failedChallenge": 2,
                        "failedSys. Test": 4,
                        "success%": 76.00%
                    },
                    "Level Total":
                    {
                        "submitted": 25,
                        "failedChallenge": 2,
                        "failedSys.Test": 4,
                        "success%": 76.00%
                    }
                },
                "Division II":
                {
                    "Level One":
                    {
                        "submitted": 25,
                        "failedChallenge": 2,
                        "failedSys.Test": 4,
                        "success%": 76.00%
                    },
                    "Level Two":
                    {
                        "submitted": 25,
                        "failedChallenge": 2,
                        "failedSys.Test": 4,
                        "success%": 76.00%
                    },
                    "Level Three":
                    {
                        "submitted": 25,
                        "failedChallenge": 2,
                        "failedSys.Test": 4,
                        "success%": 76.00%
                    },
                    "Level Total":
                    {
                        "submitted": 25,
                        "failedChallenge": 2,
                        "failedSys.Test": 4,
                        "success%": 76.00%
                    }
                }
            },
            "Challenges":
            {
                "Levels":
                {
                    "Level One":
                    {
                        "failedChallenge": 0,
                        "challenges": 1,
                        "success%": 100%
                    },
                    "Level Two":
                    {
                        "failedChallenge": 0,
                        "challenges": 1,
                        "success%": 100%
                    },
                    "Level Three":
                    {
                        "failedChallenge": 0,
                        "challenges": 1,
                        "success%": 100%
                    },
                    "Total":
                    {
                        "failedChallenge": 0,
                        "challenges": 1,
                        "success%": 100%
                    }
                }
            },
            "History":
            [
                {
                    "challengeId" : 12345,
                    "challengeName" : 'awesome component',
                    "date": "2012.9.10",
                    "rating": 1000,
                    "placement": 3,
                    "percentile": 88.3
                },
                {
                    "challengeId" : 12346,
                    "challengeName" : 'awesome component',
                    "date": "2012.10.10",
                    "rating": 1100,
                    "placement": 1,
                    "percentile": 86.3
                }
            ],
            "Distribution":
            [
                {
                    "range": "2000-2100",
                    "number": 10
                },
                {
                    "range": "2100-2200",
                    "number": 5
                }
            ]
        }

+ Response 400 (application/json)

        {
            "name":"Bad Request",
            "value":"400",
            "description":"This message will explain why the request is invalid or cannot be served."
        }
        
+ Response 404 (application/json)

        {
            "name":"Not Found",
            "value":"404",
            "description":"This message will explain why the URI requested is invalid or the resource does not exist."
        }
        

+ Response 500 (application/json)

        {
            "name":"Internal Server Error",
            "value":"500",
            "description":"Unknown server error. Please contact support."
        }

+ Response 503 (application/json)

        {
            "name":"Service Unavailable",
            "value":"503",
            "description":"Servers are up but overloaded. Try again later."
        }

## Top Ranked Marathon Members [/data/marathon/statistics/tops?rankType={rankType}]
### Top Ranked Marathon Members [GET]

+ Parameters
    + rankType (required, string, `Competitors`) ... Ranking Type, support "Competitors", "Schools" and "Countries." Currently only applicable to SRM contest type.

+ Response 200 (application/json)

        {
            "total": 30,
            "pageIndex": 1,
            "pageSize": 3,
            "data": 
            [
                {
                    "rank": 1,
                    "name": "University of Tokyo",
                    "country": "Japan",
                    "memberCount": 73,
                    "rating": 3000
                },
                {
                    "rank": 2,
                    "name": "University of Washington",
                    "country": "USA",
                    "memberCount": 73,
                    "rating": 3000
                },
                {
                    "rank": 3,
                    "name": "Tsinghua University",
                    "country": "China",
                    "memberCount": 73,
                    "rating": 3000
                }
            ]
        }

+ Response 202 (application/json)

        {
            "total": 30,
            "pageIndex": 1,
            "pageSize": 3,
            "data": 
            [
                {
                    "rank": 1,
                    "name": "Japan",
                    "memberCount": 73,
                    "rating": 3000
                },
                {
                    "rank": 2,
                    "name": "USA",
                    "memberCount": 73,
                    "rating": 3000
                },
                {
                    "rank": 3,
                    "name": "China",
                    "memberCount": 73,
                    "rating": 3000
                }
            ]
        }

+ Response 400 (application/json)

        {
            "name":"Bad Request",
            "value":"400",
            "description":"This message will explain why the request is invalid or cannot be served."
        }
        
+ Response 404 (application/json)

        {
            "name":"Not Found",
            "value":"404",
            "description":"This message will explain why the URI requested is invalid or the resource does not exist."
        }
        
+ Response 500 (application/json)

        {
            "name":"Internal Server Error",
            "value":"500",
            "description":"Unknown server error. Please contact support."
        }

+ Response 503 (application/json)

        {
            "name":"Service Unavailable",
            "value":"503",
            "description":"Servers are up but overloaded. Try again later."
        }
        
## Top Ranked SRM Members [/data/srm/statistics/tops?rankType={rankType}&pageIndex={pageIndex}&pageSize={pageSize}]
### Top Ranked SRM Members [GET]

+ Parameters
    + rankType (required, string, `Competitors`) ... Ranking Type, support "Competitors", "Schools" and "Countries." Currently only applicable to SRM contest type.
    + pageIndex (optional, number, `1`) ... The page index of the returned resources. 1-based. It can be null. The default value will be 1
    + pageSize (optional, number, `50`) ... The page size of the returned resources. 1-based. It can be null. The default value will be 10.

+ Response 200 (application/json)

        {
            "total": 30,
            "pageIndex": 1,
            "pageSize": 3,
            "data": 
            [
                {
                    "rank": 1,
                    "name": "University of Tokyo",
                    "country": "Japan",
                    "memberCount": 73,
                    "rating": 3000
                },
                {
                    "rank": 2,
                    "name": "University of Washington",
                    "country": "USA",
                    "memberCount": 73,
                    "rating": 3000
                },
                {
                    "rank": 3,
                    "name": "Tsinghua University",
                    "country": "China",
                    "memberCount": 73,
                    "rating": 3000
                }
            ]
        }

+ Response 202 (application/json)

        {
            "total": 30,
            "pageIndex": 1,
            "pageSize": 3,
            "data": 
            [
                {
                    "rank": 1,
                    "name": "Japan",
                    "memberCount": 73,
                    "rating": 3000
                },
                {
                    "rank": 2,
                    "name": "USA",
                    "memberCount": 73,
                    "rating": 3000
                },
                {
                    "rank": 3,
                    "name": "China",
                    "memberCount": 73,
                    "rating": 3000
                }
            ]
        }

+ Response 400 (application/json)

        {
            "name":"Bad Request",
            "value":"400",
            "description":"This message will explain why the request is invalid or cannot be served."
        }
        
+ Response 404 (application/json)

        {
            "name":"Not Found",
            "value":"404",
            "description":"This message will explain why the URI requested is invalid or the resource does not exist."
        }
        
+ Response 500 (application/json)

        {
            "name":"Internal Server Error",
            "value":"500",
            "description":"Unknown server error. Please contact support."
        }

+ Response 503 (application/json)

        {
            "name":"Service Unavailable",
            "value":"503",
            "description":"Servers are up but overloaded. Try again later."
        }