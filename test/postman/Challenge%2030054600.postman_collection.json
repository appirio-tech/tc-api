{
	"id": "beec52e9-d4fb-5b12-37b2-578ffbca9cef",
	"name": "Challenge 30054600",
	"description": "",
	"order": [
		"771c6958-a396-b47e-cde6-f7214ee2ca6e",
		"4278aa54-a5a0-c9f3-a542-4d7d83b58cde",
		"277dd556-0870-aee3-875c-c9894d63bda4",
		"f5977542-00ea-3184-3d47-b958bb9d25d3",
		"33c71bcc-ffce-8254-253d-8640514ae7d2",
		"94d38a46-b72a-26ae-20dc-c2304a83f5ca",
		"fb213c96-55e0-0a77-f2b6-0186f996e1da",
		"97b26905-1c5d-e698-0657-71778793bbca"
	],
	"folders": [],
	"timestamp": 1467025155666,
	"owner": "316251",
	"remoteLink": "",
	"public": false,
	"published": false,
	"requests": [
		{
			"id": "277dd556-0870-aee3-875c-c9894d63bda4",
			"headers": "Authorization: Bearer {{authToken}}\n",
			"url": "localhost:8080/api/v2/terms/for/132456/40000001,40000002,40000003,40000004,40000005",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 403\"] = responseCode.code === 403;\nvar jsonData = JSON.parse(responseBody);\ntests[\"Authentication required\"] = jsonData.error.details === \"This user cannot get these data of other users\";\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1467026165794,
			"name": "3. Try to get terms for another user",
			"description": "",
			"collectionId": "beec52e9-d4fb-5b12-37b2-578ffbca9cef",
			"responses": []
		},
		{
			"id": "33c71bcc-ffce-8254-253d-8640514ae7d2",
			"headers": "Content-Type: application/json\n",
			"url": "localhost:8080/api/v2/auth",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var authResponse = JSON.parse(responseBody);\npostman.setEnvironmentVariable(\"authToken\", authResponse.token);\ntests[\"Status code is 200\"] = responseCode.code === 200;\nvar jsonData = JSON.parse(responseBody);\ntests[\"A valid token is returned\"] = !!jsonData.token;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1467026645589,
			"name": "5. Re-authenticate as admin user",
			"description": "",
			"collectionId": "beec52e9-d4fb-5b12-37b2-578ffbca9cef",
			"responses": [],
			"rawModeData": "{\n    \"username\": \"heffan\", \n    \"password\": \"password\"\n}"
		},
		{
			"id": "4278aa54-a5a0-c9f3-a542-4d7d83b58cde",
			"headers": "Content-Type: application/json\n",
			"url": "localhost:8080/api/v2/auth",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var authResponse = JSON.parse(responseBody);\npostman.setEnvironmentVariable(\"authToken\", authResponse.token);\ntests[\"Status code is 200\"] = responseCode.code === 200;\nvar jsonData = JSON.parse(responseBody);\ntests[\"A valid token is returned\"] = !!jsonData.token;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1467025511038,
			"name": "2. Log in as ordinary user",
			"description": "",
			"collectionId": "beec52e9-d4fb-5b12-37b2-578ffbca9cef",
			"responses": [],
			"rawModeData": "{\n    \"username\": \"user\", \n    \"password\": \"password\"\n}"
		},
		{
			"id": "771c6958-a396-b47e-cde6-f7214ee2ca6e",
			"headers": "",
			"url": "localhost:8080/api/v2/terms/for/132458/40000001,40000002,40000003,40000004,40000005",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"tests": "tests[\"Status code is 401\"] = responseCode.code === 401;\nvar jsonData = JSON.parse(responseBody);\ntests[\"Authentication required\"] = jsonData.error.details === \"Authentication credential was missing.\";\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1467025367614,
			"name": "1. Try to get terms without authorization",
			"description": "",
			"collectionId": "beec52e9-d4fb-5b12-37b2-578ffbca9cef",
			"responses": []
		},
		{
			"id": "94d38a46-b72a-26ae-20dc-c2304a83f5ca",
			"headers": "Authorization: Bearer {{authToken}}\n",
			"url": "localhost:8080/api/v2/terms/for/132458/40000001,40000002,40000003,40000004,40000005",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar jsonData = JSON.parse(responseBody);\ntests[\"5 terms returned\"] = jsonData.terms.length === 5;\n\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1467026345553,
			"name": "6. Try to get terms for another user again",
			"description": "",
			"collectionId": "beec52e9-d4fb-5b12-37b2-578ffbca9cef",
			"responses": []
		},
		{
			"id": "97b26905-1c5d-e698-0657-71778793bbca",
			"headers": "Authorization: Bearer {{authToken}}\n",
			"url": "localhost:8080/api/v2/terms/for/132458/40000001,40000002,abracadabra,40000004,40000005",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\nvar jsonData = JSON.parse(responseBody);\ntests[\"Bad terms of use id\"] = jsonData.error.details === \"Each Terms Of Use ID should be number.\";\n\n\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1467026848102,
			"name": "8. Try invalid term of use id",
			"description": "",
			"collectionId": "beec52e9-d4fb-5b12-37b2-578ffbca9cef",
			"responses": []
		},
		{
			"id": "f5977542-00ea-3184-3d47-b958bb9d25d3",
			"headers": "Authorization: Bearer {{authToken}}\n",
			"url": "localhost:8080/api/v2/terms/for/132458/40000001,40000002,40000003,40000004,40000005",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar jsonData = JSON.parse(responseBody);\ntests[\"5 terms returned\"] = jsonData.terms.length === 5;\n\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1467026345553,
			"name": "4. Try the correct call",
			"description": "",
			"collectionId": "beec52e9-d4fb-5b12-37b2-578ffbca9cef",
			"responses": []
		},
		{
			"id": "fb213c96-55e0-0a77-f2b6-0186f996e1da",
			"headers": "Authorization: Bearer {{authToken}}\n",
			"url": "localhost:8080/api/v2/terms/for/0/40000001,40000002,40000003,40000004,40000005",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": null,
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\nvar jsonData = JSON.parse(responseBody);\ntests[\"Bad user id\"] = jsonData.error.details === \"User ID should be positive.\";\n\n\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1467026726365,
			"name": "7. Try invalid user id",
			"description": "",
			"collectionId": "beec52e9-d4fb-5b12-37b2-578ffbca9cef",
			"responses": []
		}
	]
}